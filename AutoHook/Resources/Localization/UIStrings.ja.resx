<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DrawHeader_Testing" xml:space="preserve">
    <value>テスト中</value>
  </data>
  <data name="default" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="DrawImportExport_Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="ImportStackFromClipboard" xml:space="preserve">
    <value>クリップボードから取り込む</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>インポート</value>
  </data>
  <data name="PresetName" xml:space="preserve">
    <value>プリセット名</value>
  </data>
  <data name="ImportThisPreset" xml:space="preserve">
    <value>このプリセットをインポートしますか？</value>
  </data>
  <data name="AutoMooch" xml:space="preserve">
    <value>自動泳がせ釣り</value>
  </data>
  <data name="AddLastCatch" xml:space="preserve">
    <value>最後に釣った魚を追加：</value>
  </data>
  <data name="ExportPresetToClipboard" xml:space="preserve">
    <value>プリセットをクリップボードにエクスポート</value>
  </data>
  <data name="PresetExportedToTheClipboard" xml:space="preserve">
    <value>プリセットをクリップボードにエクスポートしました</value>
  </data>
  <data name="APresetWithTheSameNameAlreadyExists" xml:space="preserve">
    <value>この名前のプリセットはすでに存在します。</value>
  </data>
  <data name="PresetAlreadyExist" xml:space="preserve">
    <value>この名前のプリセットはすでに存在します。</value>
  </data>
  <data name="CurrentBaitMooch" xml:space="preserve">
    <value>現在の餌：</value>
  </data>
  <data name="AddCurrentBaitMooch" xml:space="preserve">
    <value>現在の餌を追加</value>
  </data>
  <data name="TabPresets_DrawHeader_IsEnabledByDefault" xml:space="preserve">
    <value>新しい餌が追加されたときにデフォルトで有効になります </value>
  </data>
  <data name="TabPresets_DrawHeader_CorrectlyEditTheBaitMoochName" xml:space="preserve">
    <value>ゲーム内で表示されるように、餌/泳がせ釣り用の魚名を正しく編集してください。(例：万能ルアー)</value>
  </data>
  <data name="NewBaitMooch" xml:space="preserve">
    <value>新しい餌</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="HoldShiftToDelete" xml:space="preserve">
    <value>Shiftキーを押しながらDeleteキーを押す</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="RightClickToRename" xml:space="preserve">
    <value>右クリックで名前を変更</value>
  </data>
  <data name="TabPresets_DrawHeader_EditPresetNamePressEnterToConfirm" xml:space="preserve">
    <value>プリセット名を編集(Enterキーを押して確定)</value>
  </data>
  <data name="HookPresets" xml:space="preserve">
    <value>使用するプリセット</value>
  </data>
  <data name="AddNewPreset" xml:space="preserve">
    <value>新規プリセットの追加</value>
  </data>
  <data name="NewPreset" xml:space="preserve">
    <value>新規プリセット</value>
  </data>
  <data name="TabNameCustomPresets" xml:space="preserve">
    <value>カスタムプリセット</value>
  </data>
  <data name="TabNameGPConfig" xml:space="preserve">
    <value>GP設定</value>
  </data>
  <data name="TabGPConfig_TabDescription" xml:space="preserve">
    <value>ここでは、自動キャスト機能で使用されるアクションとアイテムのGP閾値をカスタマイズできます。</value>
  </data>
  <data name="Above" xml:space="preserve">
    <value>以上</value>
  </data>
  <data name="Below" xml:space="preserve">
    <value>以下</value>
  </data>
  <data name="WillBeUsedWhenYourGPIsEqualOr" xml:space="preserve">
    <value>はGPが足りている場合のみ使用されます。</value>
    <comment>Action will be used when your GP is Equal or Above/Below</comment>
  </data>
  <data name="None" xml:space="preserve">
    <value>未設定</value>
  </data>
  <data name="TabnameGeneral" xml:space="preserve">
    <value>全般</value>
  </data>
  <data name="DrawHeader_GeneralSettings" xml:space="preserve">
    <value>一般設定</value>
  </data>
  <data name="DrawHeader_CheckChangelog" xml:space="preserve">
    <value>変更履歴から変更点を確認してください</value>
  </data>
  <data name="DrawHeader_ClickToReportAnIssue" xml:space="preserve">
    <value>ここをクリックして問題を報告または提案をする</value>
  </data>
  <data name="Changelog" xml:space="preserve">
    <value>変更履歴</value>
  </data>
  <data name="HookWeakExclamation" xml:space="preserve">
    <value>弱震(!)</value>
  </data>
  <data name="HookStrongExclamation" xml:space="preserve">
    <value>強震(!!)</value>
  </data>
  <data name="HookLegendaryExclamation" xml:space="preserve">
    <value>激震(!!!)</value>
  </data>
  <data name="HookWillBeUsedIfPatienceIsNotUp" xml:space="preserve">
    <value>GPが足りていない場合、通常のフッキングが使用されます</value>
  </data>
  <data name="PrecisionHookset" xml:space="preserve">
    <value>プレシジョンフッキング</value>
  </data>
  <data name="PowerfulHookset" xml:space="preserve">
    <value>ストロングフッキング</value>
  </data>
  <data name="MoochBaitName" xml:space="preserve">
    <value>泳がせ釣り/餌の名前</value>
  </data>
  <data name="BaitAlreadyExists" xml:space="preserve">
    <value>餌はすでに存在しています</value>
  </data>
  <data name="MaxWait" xml:space="preserve">
    <value>最大待ち時間</value>
    <comment>Maximum time to wait</comment>
  </data>
  <data name="HelpMarkerMaxWaitTimer" xml:space="preserve">
    <value>フックは指定された時間を経過した後には使用されません。
例えば、最大待ち時間を10秒に設定し、何かが12秒後にかかった場合、その魚は無視されます。</value>
  </data>
  <data name="MinWait" xml:space="preserve">
    <value>最低待ち時間</value>
  </data>
  <data name="StopFishingAfter" xml:space="preserve">
    <value>釣りを中止後：</value>
  </data>
  <data name="StopFishing" xml:space="preserve">
    <value>釣りを停止</value>
  </data>
  <data name="AfterBeingCaught" xml:space="preserve">
    <value>獲得後：</value>
  </data>
  <data name="AfterBeingCaughtDescription" xml:space="preserve">
    <value>・餌が設定されている場合：魚がX匹釣れたら釣りをやめる
・魚が設定されている場合：指定した魚がX回釣れたら釣りをやめる</value>
  </data>
  <data name="TimeS" xml:space="preserve">
    <value>回</value>
    <comment>Quantity, example: 5 Time(s) </comment>
  </data>
  <data name="SurfaceSlapIdenticalCast" xml:space="preserve">
    <value>トレードリリース＆セイムキャスト</value>
  </data>
  <data name="OverridesIdenticalCast" xml:space="preserve">
    <value>セイムキャストを上書きする</value>
  </data>
  <data name="OverridesSurfaceSlap" xml:space="preserve">
    <value>トレードリリースを上書きする</value>
  </data>
  <data name="UseSurfaceSlap" xml:space="preserve">
    <value>トレードリリースを使用</value>
  </data>
  <data name="UseIdenticalCast" xml:space="preserve">
    <value>セイムキャストを使用</value>
  </data>
  <data name="UseMoochII" xml:space="preserve">
    <value>泳がせ釣りIIを使用</value>
  </data>
  <data name="OnlyUseWhenFisherSIntutionIsActive" xml:space="preserve">
    <value>漁師の直感が有効な場合にのみ使用</value>
  </data>
  <data name="AutoMoochPresetDescription" xml:space="preserve">
    <value>・餌が設定されている場合、この餌で釣った魚はすべて泳がせ釣りに使用されます。
・魚が設定されている場合、釣れた時に泳がせ釣りに使用されます。
・設定が無効の場合、一般タブで泳がせ釣りが有効になっていても泳がせ釣りに使用されません。</value>
  </data>
  <data name="AutoMoochPresetHelpMarker" xml:space="preserve">
    <value>このオプションは自動キャスティングより優先されます</value>
  </data>
  <data name="FisherSIntuitionSettings" xml:space="preserve">
    <value>漁師の直感 について設定</value>
  </data>
  <data name="FisherSIntuitionSettingsHelpMarker" xml:space="preserve">
    <value>漁師の直感が発動中のみカスタムフッキングを有効にする</value>
  </data>
  <data name="HoldShiftBothDHTH" xml:space="preserve">
    <value>Shiftキーを押しながら選択すると、ダブルフックとトリプルフックの両方を選択します (非推奨)</value>
  </data>
  <data name="UseDoubleHookIfGp400" xml:space="preserve">
    <value>ダブルフッキングを使用（GP &gt; 400の場合）</value>
  </data>
  <data name="UseTripleHookIfGp700" xml:space="preserve">
    <value>トリプルフッキングを使用（GP &gt; 700の場合）</value>
  </data>
  <data name="UseWhenPatienceIsActiveNotRecommended" xml:space="preserve">
    <value>ペーシェンスが有効な場合も使用する (非推奨)</value>
  </data>
  <data name="DHTHPatienceHelpMarker" xml:space="preserve">
    <value>※注意※
無効にすると、GPが回復した場合にプレシジョン/ストロングフッキングが使用されます。</value>
  </data>
  <data name="LetTheFishEscape" xml:space="preserve">
    <value>GPが足りていない場合、魚をリリースします</value>
  </data>
  <data name="OnlyUseWhenIdenticalCastIsActive" xml:space="preserve">
    <value>セイムキャストがアクティブな場合にのみ使用</value>
  </data>
  <data name="DoubleTripleHookSettings" xml:space="preserve">
    <value>ダブル/トリプルフッキング設定</value>
  </data>
  <data name="EnabledConfigArrow" xml:space="preserve">
    <value>設定を有効にしました -&gt;</value>
  </data>
  <data name="ChumTimer" xml:space="preserve">
    <value>撒き餌タイマー</value>
  </data>
  <data name="EnableChumTimers" xml:space="preserve">
    <value>撒き餌タイマーを有効にする</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>有効</value>
  </data>
  <data name="TabNameAutoGig" xml:space="preserve">
    <value>自動ギギング</value>
  </data>
  <data name="TabAutoGigDescription" xml:space="preserve">
    <value>これは実験的な機能であり、魚を見逃す可能性があります。 あまりにも魚が釣れない場合は、刺突画面のウィンドウ倍率を調整してみてください。</value>
  </data>
  <data name="EnableAutoGig" xml:space="preserve">
    <value>自動ギギングを有効にする</value>
  </data>
  <data name="HideOverlayDuringSpearfishing" xml:space="preserve">
    <value>刺突漁中にオーバーレイを隠す</value>
  </data>
  <data name="AutoGigHideOverlayHelpMarker" xml:space="preserve">
    <value>自動刺突オプションが無効の場合にのみ非表示になります</value>
  </data>
  <data name="DrawFishHitbox" xml:space="preserve">
    <value>魚のヒットボックスを表示</value>
  </data>
  <data name="DrawFishHitboxHelpMarker" xml:space="preserve">
    <value>ヒットボックスは、選択されたサイズとスピードの魚にのみ利用可能です</value>
  </data>
  <data name="DrawGigHitbox" xml:space="preserve">
    <value>銛のヒットボックスを表示</value>
  </data>
  <data name="SelectTheSizeAndSpeed" xml:space="preserve">
    <value>目的の魚のサイズとスピードを選択してください。(【Gather Buddy】の刺突オーバーレイが便利です)</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>サイズ</value>
  </data>
  <data name="Speed" xml:space="preserve">
    <value>速度</value>
  </data>
  <data name="AutoCastCordialPriority" xml:space="preserve">
    <value>優先度を変更: ライトコーディアル &gt; コーディアル &gt; ハイコーディアル</value>
  </data>
  <data name="AutoCastCordialPriorityHelpMarker" xml:space="preserve">
    <value>コーディアルがない場合、代わりにハイコーディアルが使用されます</value>
  </data>
  <data name="AutoCastUseCordial" xml:space="preserve">
    <value>コーディアルを使用（ハイコーディアルが優先）</value>
  </data>
  <data name="AutoCastUseCordialHelpMarker" xml:space="preserve">
    <value>ハイコーディアルがない場合、代わりにコーディアルが使用されます</value>
  </data>
  <data name="AutoCastUseFishEyes" xml:space="preserve">
    <value>フィッシュアイを使用</value>
  </data>
  <data name="CancelsCurrentMooch" xml:space="preserve">
    <value>現在の泳がせ釣りをキャンセル</value>
  </data>
  <data name="AutoCastUseChum" xml:space="preserve">
    <value>撒き餌を使用</value>
  </data>
  <data name="AutoCastExtraOptionPrizeCatch" xml:space="preserve">
    <value>泳がせ釣りⅡが有効の時のみ使用可能です。 &gt;&gt;&gt;</value>
  </data>
  <data name="ExtraOptionPrizeCatchHelpMarker" xml:space="preserve">
    <value>”泳がせ釣りII”が有効になっていないと機能しません。”泳がせ釣り”のみを行う場合は100GP節約出来るかもしれません。</value>
  </data>
  <data name="Enable_AutoHook" xml:space="preserve">
    <value>AutoHookを有効にする</value>
  </data>
  <data name="Plugin_Enabled" xml:space="preserve">
    <value>プラグインが有効化されました</value>
  </data>
  <data name="Plugin_Disabled" xml:space="preserve">
    <value>プラグインが無効化されました</value>
  </data>
  <data name="Plugin_Name_Settings" xml:space="preserve">
    <value>{0}: 設定</value>
  </data>
  <data name="PluginUi_Draw_Enables_Disables" xml:space="preserve">
    <value>プラグインを有効/無効にする</value>
  </data>
  <data name="Using_Chum_Timer" xml:space="preserve">
    <value>撒き餌タイマーを使用</value>
  </data>
  <data name="Disables_AutoHook" xml:space="preserve">
    <value>自動フッキングを無効にする</value>
  </data>
  <data name="AutoHook_Disabled" xml:space="preserve">
    <value>自動フッキング無効</value>
  </data>
  <data name="AutoHook_Enabled" xml:space="preserve">
    <value>自動フッキング有効</value>
  </data>
  <data name="Enables_AutoHook" xml:space="preserve">
    <value>自動フッキングを有効にする</value>
  </data>
  <data name="Opens_Config_Window" xml:space="preserve">
    <value>設定ウィンドウを開く</value>
  </data>
  <data name="TabAutoCasts_When_Stack_Equals" xml:space="preserve">
    <value>スタック時 = </value>
  </data>
  <data name="Use_Prize_Catch" xml:space="preserve">
    <value>大物狙いを使用</value>
  </data>
  <data name="Use_Prize_Catch_HelpText" xml:space="preserve">
    <value>泳がせ釣りをキャンセルする。大物狙いが有効な場合ペーシェンスと熟漁の技を使用しません。</value>
  </data>
  <data name="Toggles_AutoHook_On_Off" xml:space="preserve">
    <value>自動フッキングの有効/無効を切り替える</value>
  </data>
  <data name="Triple_Hook" xml:space="preserve">
    <value>トリプルフッキング</value>
  </data>
  <data name="Watered_Cordial" xml:space="preserve">
    <value>ライトコーディアル</value>
  </data>
  <data name="Cordial" xml:space="preserve">
    <value>コーディアル</value>
  </data>
  <data name="HQ_Cordial" xml:space="preserve">
    <value>コーディアルHQ</value>
  </data>
  <data name="HQ_Watered_Cordial" xml:space="preserve">
    <value>ライトコーディアルHQ</value>
  </data>
  <data name="Double_Hook" xml:space="preserve">
    <value>ダブルフッキング</value>
  </data>
  <data name="Patience_II" xml:space="preserve">
    <value>ペーシェンスII</value>
  </data>
  <data name="Hi_Cordial" xml:space="preserve">
    <value>ハイコーディアル</value>
  </data>
  <data name="Patience_I" xml:space="preserve">
    <value>ペーシェンス</value>
  </data>
  <data name="Prize_Catch" xml:space="preserve">
    <value>大物狙い</value>
  </data>
  <data name="Surface_Slap" xml:space="preserve">
    <value>トレードリリース</value>
  </data>
  <data name="Identical_Cast" xml:space="preserve">
    <value>セイムキャスト</value>
  </data>
  <data name="Fish_Eyes" xml:space="preserve">
    <value>フィッシュアイ</value>
  </data>
  <data name="Chum" xml:space="preserve">
    <value>撒き餌</value>
  </data>
  <data name="Thaliaks_Favor" xml:space="preserve">
    <value>サリャクの恩寵</value>
  </data>
  <data name="MakeShift_Bait" xml:space="preserve">
    <value>熟漁の技</value>
  </data>
  <data name="DecompressString_Invalid_Import" xml:space="preserve">
    <value>無効なコードです</value>
  </data>
  <data name="New_Preset" xml:space="preserve">
    <value>新規プリセット</value>
  </data>
  <data name="Auto_Casts" xml:space="preserve">
    <value>自動キャスティング</value>
  </data>
  <data name="TabAutoCasts_DrawAutoCast_HelpText" xml:space="preserve">
    <value>魚が釣れた後キャスティングをします。

注意!!!
自動泳がせ釣りが有効に(グローバル・カスタムプリセットどちらも) なっていない場合、通常のキャスティングを行います（泳がせ釣りの機会を失う可能性があります）。</value>
  </data>
  <data name="Global_Auto_Cast_Line" xml:space="preserve">
    <value>グローバル自動キャスティング</value>
  </data>
  <data name="Use_Thaliaks_Favor" xml:space="preserve">
    <value>サリャクの恩寵を使用</value>
  </data>
  <data name="Use_Natures_Bounty" xml:space="preserve">
    <value>ネイチャーバウンティを使用</value>
  </data>
  <data name="Enable_AutoGig" xml:space="preserve">
    <value>自動ギギングを有効にする</value>
  </data>
  <data name="Hitbox" xml:space="preserve">
    <value>ヒットボックス</value>
  </data>
  <data name="Use_Makeshift_Bait" xml:space="preserve">
    <value>熟漁の技を使用</value>
  </data>
  <data name="TabAutoCasts_DrawMakeShiftBait_HelpText" xml:space="preserve">
    <value>自動サリャクの恩寵と競合する可能性があります</value>
  </data>
  <data name="TabAutoCasts_DrawExtraOptionsThaliaksFavor_" xml:space="preserve">
    <value>スタック時 =</value>
  </data>
  <data name="TabAutoCasts_DrawThaliaksFavor_HelpText" xml:space="preserve">
    <value>自動熟漁の技と競合する可能性があります</value>
  </data>
  <data name="Use_Patience_I_II" xml:space="preserve">
    <value>ペーシェンスI/IIを使用</value>
  </data>
  <data name="TabAutoCasts_DrawPatience_HelpText" xml:space="preserve">
    <value>ペーシェンスI/IIは、現在のGPがアクションコスト+20に等しい(またはそれ以上) 場合に使用されます （ペーシェンスIは220、ペーシェンスIIは580）。この設定は、フッキングのGP不足を回避します</value>
  </data>
  <data name="TabAutoCasts_DrawExtraOptionsPatience" xml:space="preserve">
    <value>熟漁の技が有効な場合に使用</value>
  </data>
  <data name="Enable_Auto_Casts" xml:space="preserve">
    <value>自動キャスティングを有効にする</value>
  </data>
  <data name="Dont_Cancel_Mooch" xml:space="preserve">
    <value>泳がせ釣りをキャンセルしない</value>
  </data>
  <data name="TabAutoCasts_DrawHeader_HelpText" xml:space="preserve">
    <value>泳がせ釣りチャンスをキャンセルするアクションは使用されません（例：撒き餌、フィッシュアイ、大物狙いなど）</value>
  </data>
  <data name="TabAutoCasts_DrawExtraOptionsAutoMooch_Extra_Only_Active" xml:space="preserve">
    <value>漁師の直感が有効な場合にのみ使用</value>
  </data>
  <data name="Use_Mooch_II" xml:space="preserve">
    <value>泳がせ釣りII を使用</value>
  </data>
  <data name="Global_Auto_Mooch" xml:space="preserve">
    <value>自動泳がせ釣り（グローバル）</value>
  </data>
  <data name="TabAutoCasts_DrawHeader_Guide_Collectables" xml:space="preserve">
    <value>ガイド：収集品を自動的に受け取る方法</value>
  </data>
  <data name="Support_me_on_Ko_fi" xml:space="preserve">
    <value>Ko-Fiでサポート</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="Incomplete" xml:space="preserve">
    <value>未完了</value>
  </data>
  <data name="PluginUi_Language" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="TabGeneral_DrawHeader_Localization_Help" xml:space="preserve">
    <value>プラグインの翻訳を支援する (Crowdin)</value>
  </data>
  <data name="Add_new_bait" xml:space="preserve">
    <value>新しい餌を追加</value>
  </data>
  <data name="Add_new_mooch" xml:space="preserve">
    <value>新しい生き餌を追加</value>
  </data>
  <data name="Presets_Hook" xml:space="preserve">
    <value>フッキング</value>
  </data>
  <data name="Mooch" xml:space="preserve">
    <value>泳がせ釣り</value>
  </data>
  <data name="AutoCastLine_Auto_Cast_Line" xml:space="preserve">
    <value>自動キャスティング</value>
  </data>
  <data name="Normal_Hook" xml:space="preserve">
    <value>フッキング</value>
  </data>
  <data name="Bait" xml:space="preserve">
    <value>エサ</value>
  </data>
  <data name="All_Baits" xml:space="preserve">
    <value>すべてのエサ</value>
  </data>
  <data name="All_Mooches" xml:space="preserve">
    <value>全ての生き餌</value>
  </data>
  <data name="AutoPatience_Patience" xml:space="preserve">
    <value>ペーシェンス</value>
  </data>
  <data name="Fish" xml:space="preserve">
    <value>魚</value>
  </data>
  <data name="Add_new_fish" xml:space="preserve">
    <value>新しい魚を追加</value>
  </data>
  <data name="Cast_Line" xml:space="preserve">
    <value>キャスティング</value>
    <comment>Cast (fisher action)</comment>
  </data>
  <data name="Mooch_II" xml:space="preserve">
    <value>泳がせ釣りII</value>
  </data>
  <data name="Never_Mooch" xml:space="preserve">
    <value>泳がせ釣りをしない</value>
  </data>
  <data name="Mooch_Setting" xml:space="preserve">
    <value>泳がせ釣り設定</value>
  </data>
  <data name="Swap_Preset" xml:space="preserve">
    <value>プリセットの切替え</value>
  </data>
  <data name="Swap_Bait" xml:space="preserve">
    <value>エサの切替え</value>
  </data>
  <data name="IdenticalCast_HelpText" xml:space="preserve">
    <value>無効にした場合泳がせ釣りをしません</value>
  </data>
  <data name="Always_Mooch" xml:space="preserve">
    <value>常に泳がせ釣りをする</value>
  </data>
  <data name="Caught_Counter" xml:space="preserve">
    <value>釣った魚の数をカウントします。例:”取得数: 5”</value>
    <comment>It'll shows how many times the fish was caught. Example: Caught: 5x</comment>
  </data>
  <data name="Hooked_Counter" xml:space="preserve">
    <value>釣った魚の数をカウントします。例:”フッキング: 5”</value>
    <comment>It'll shows how many times the fish was caught. Example: Hooked: 5x</comment>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>有効</value>
  </data>
  <data name="StopFishing_After_hooking" xml:space="preserve">
    <value>釣った後…</value>
  </data>
  <data name="Hooking_Limited_Reached_Chat_Message" xml:space="preserve">
    <value>フッキング回数の上限に達した為停止します。({0})</value>
  </data>
  <data name="Caught_Limited_Reached_Chat_Message" xml:space="preserve">
    <value>捕獲数上限に達した為停止します。（{0}）</value>
  </data>
  <data name="Stop_Casting" xml:space="preserve">
    <value>キャスティングを停止</value>
  </data>
  <data name="Auto_Cast_Stopped" xml:space="preserve">
    <value>自動キャスティングは停止されますが、釣りは終了しません</value>
  </data>
  <data name="Quit_Fishing" xml:space="preserve">
    <value>釣りを終了する</value>
  </data>
  <data name="Quit_Action_HelpText" xml:space="preserve">
    <value>釣りを終了する</value>
  </data>
  <data name="Tab_Description" xml:space="preserve">
    <value>備考</value>
  </data>
  <data name="TabDefaultPreset_Description" xml:space="preserve">
    <value>デフォルトプリセットは、カスタムベイト/生き餌/魚/オートキャストが検出されない場合に使用されます。 ここでは、カスタムプリセットが作成されない限り、デフォルトで使用されるフック動作を設定できます。 
ガイドタブをチェックしてください。</value>
  </data>
  <data name="Old_Preset_Warning" xml:space="preserve">
    <value>これは旧バージョンからのインポートです。いくつか設定がありません。</value>
  </data>
  <data name="Show_Chat_Logs" xml:space="preserve">
    <value>チャットログを表示する</value>
  </data>
  <data name="Show_Current_Status_Header" xml:space="preserve">
    <value>現在のステータスをヘッダーに表示する</value>
  </data>
  <data name="DrawConfigs_Max_" xml:space="preserve">
    <value>最大</value>
  </data>
  <data name="DrawConfigs_Min_" xml:space="preserve">
    <value>最小</value>
  </data>
  <data name="Delay_Between_Casts" xml:space="preserve">
    <value>キャスティングのディレイ(ms):</value>
  </data>
  <data name="Show_Debug_Console" xml:space="preserve">
    <value>デバッグコンソールを表示</value>
  </data>
  <data name="Show_Chat_Logs_HelpText" xml:space="preserve">
    <value>「プリセットの切替え」のようなメッセージをチャットに表示する</value>
  </data>
  <data name="TabName_Config_Guides" xml:space="preserve">
    <value>設定 / ガイド</value>
  </data>
  <data name="Open_Console" xml:space="preserve">
    <value>コンソールを開く</value>
  </data>
  <data name="SubAuto_Disabled" xml:space="preserve">
    <value>自動キャスティング：無効</value>
  </data>
  <data name="Default_AutoCast_Being_Used" xml:space="preserve">
    <value>[Default] 自動キャスティングが使用されます</value>
  </data>
  <data name="Only_When_Patience_Active" xml:space="preserve">
    <value>ペーシェンス中のみ使用する</value>
  </data>
  <data name="Stop_After_Caught" xml:space="preserve">
    <value>釣り上げ後に停止</value>
  </data>
</root>